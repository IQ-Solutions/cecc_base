/*------------------------------------*\
    #MIXINS
\*------------------------------------*/

/**
* Respond To - Mixin to manage responsive breakpoints
* https://css-tricks.com/snippets/sass/mixin-manage-breakpoints/
*	Usage:  @include respond-to('s') {}
* @author Hugo Giraudel
*/
$breakpoints: (
  'xs': 321px,
  's': 500px,
  'm': 768px,
  'l': 1024px,
  'xl': 1200px
) !default;

@mixin respond-to($breakpoint) {
  // If the key exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value.
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }

  // If the key doesn't exist in the map.
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

/**
* CSS Transition
*	Usage: @include transition(width, 0.3s, ease-out);
*/
 @mixin transition($transition-property, $transition-time, $method) {
	-webkit-transition: $transition-property $transition-time $method;
	-moz-transition: $transition-property $transition-time $method;
	-ms-transition: $transition-property $transition-time $method;
	-o-transition: $transition-property $transition-time $method;
	transition: $transition-property $transition-time $method;
}

/** Rem Unit font sizes with relative fallback http:/seesparkbox.com/foundry/scss_rem_mixin_now_with_a_better_fallback
 *	Usage: @include font-size(1, large);
 */
 @mixin font-size( $decimal-size, $keyword: null ) {
  @if $keyword{ font-size: $keyword; }
  @else { font-size: $decimal-size * $base-font-multiplier * 16px;}
  font-size: $decimal-size * 1rem;
}

// ICF
@mixin transition($main-transition: all .3s ease-in-out) {
	-webkit-transition: $main-transition;
  	transition: $main-transition;
}

@mixin fast-transition($fast-transition: all .3s) {
	-webkit-transition: $fast-transition;
  	transition: $fast-transition;
}

@mixin main-shadow($main-shadow: 0px 1px 15px 0px rgba(1,1,1,.15)) {
	-webkit-box-shadow: $main-shadow;
  	box-shadow: $main-shadow;
}

@mixin card-shadow($card-shadow: 0px 2px 7px 0px rgba(1, 1, 1, 0.1)) {
  -webkit-box-shadow: $card-shadow;
    box-shadow: $card-shadow;
}

@mixin header-shadow($header-shadow: 0px 0px 10px 0px rgba(1,1,1,.1)) {
	-webkit-box-shadow: $header-shadow;
  	box-shadow: $header-shadow;
}

@mixin linear-gradient($top, $bottom){
    background: -moz-linear-gradient(45deg, $top 0%, $bottom 100%); 	/* FF3.6+ */
    background: -webkit-linear-gradient(45deg, $top 0%, $bottom 100%); 	/* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(45deg, $top 0%, $bottom 100%); 		/* Opera 11.10+ */
    background: -ms-linear-gradient(45deg, $top 0%, $bottom 100%); 		/* IE10+ */
    background: linear-gradient(45deg, $top 0%, $bottom 100%); 			/* W3C */
}

@mixin icon-shadow($icon-shadow: 0px 2px 5px 0px rgba(1,1,1,.2)) {
	-webkit-box-shadow: $icon-shadow;
  	box-shadow: $icon-shadow;
}

@mixin icon-shadow-hover($icon-shadow-hover: 0px 7px 10px 0px rgba(1,1,1,.05)) {
	-webkit-box-shadow: $icon-shadow-hover;
  	box-shadow: $icon-shadow-hover;
}